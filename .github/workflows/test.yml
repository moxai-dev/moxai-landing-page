name: Deploy moxai.ru

on:
  push:
    branches:
      - test-github-actions

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      HOST: ${{ secrets.REMOTE_HOST }}
      USERNAME: ${{ secrets.REMOTE_USER }}
      KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      REMOTE_PATH: ${{ secrets.REMOTE_PATH }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Build Frontend
        working-directory: frontend
        run: |
          npm ci
          npm run build

      - name: Install Backend dependencies
        working-directory: backend
        run: |
          npm ci

      - name: Clear Remote Directories
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: $HOST
          username: $USERNAME
          key: $KEY
          script: |
            rm -rf $REMOTE_PATH/frontend/*
            rm -rf $REMOTE_PATH/backend/*

      - name: Deploy Frontend Files
        uses: appleboy/scp-action@v0.1.7
        with:
          host: $HOST
          username: $USERNAME
          key: $KEY
          source: "./frontend/dist/*"
          target: "$REMOTE_PATH/frontend/"
          strip_components: 1

      - name: Deploy Backend Files
        uses: appleboy/scp-action@v0.1.7
        with:
          host: $HOST
          username: $USERNAME
          key: $KEY
          source: "./backend/*"
          target: "$REMOTE_PATH/backend/"

      - name: Restart Backend Service
        uses: appleboy/ssh-action@v1.2.2
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_IDS: ${{ secrets.TELEGRAM_CHAT_IDS }}
        with:
          host: $HOST
          username: $USERNAME
          key: $KEY
          envs: TELEGRAM_BOT_TOKEN,TELEGRAM_CHAT_IDS
          script: |
            sudo systemctl restart mybackend.service

      # - name: Install SSH client
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y openssh-client

      # - name: Execute test command on remote server
      #   env:
      #     SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      #     REMOTE_USER: ${{ secrets.REMOTE_USER }}
      #     REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
      #     REMOTE_PATH: ${{ secrets.REMOTE_PATH }}
      #   run: |
      #     # Сохранение приватного ключа в файл
      #     echo "$SSH_PRIVATE_KEY" > private_key
      #     chmod 600 private_key

      #     # Выполнение SSH-команды на удалённом сервере:
      #     # Здесь создаётся или перезаписывается файл test.txt с тестовым сообщением,
      #     # содержащим текущую дату и время.
      #     ssh -i private_key -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST "echo 'Test deployment triggered at $(date)' > $REMOTE_PATH/test.txt"

      #     # Удаление временного файла с ключом
      #     rm private_key
